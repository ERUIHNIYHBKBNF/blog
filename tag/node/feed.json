{
    "version": "https://jsonfeed.org/version/1",
    "title": "Eruの兔叽窝 • All posts by \"node\" tag",
    "description": "嘤嘤嘤~",
    "home_page_url": "https://eruihniyhbkbnf.github.io/blog",
    "items": [
        {
            "id": "https://eruihniyhbkbnf.github.io/blog/2022/11/04/Node-C-addons%E5%88%9D%E6%8E%A2/",
            "url": "https://eruihniyhbkbnf.github.io/blog/2022/11/04/Node-C-addons%E5%88%9D%E6%8E%A2/",
            "title": "Node C++ addons初探",
            "date_published": "2022-11-04T05:00:23.000Z",
            "content_html": "<p>发现了个好玩的东西，来学一手（实际上就是跟文档随便过一下再拿中文随便记录一下）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvbGF0ZXN0LXYxOC54L2RvY3MvYXBpL2FkZG9ucy5odG1s\">https://nodejs.org/dist/latest-v18.x/docs/api/addons.html</span></p>\n<blockquote>\n<p><em>Addons</em> are dynamically-linked shared objects written in C++. The  <code>require()</code>  function can load addons as ordinary Node.js modules. Addons provide an interface between JavaScript and C/C++ libraries.</p>\n</blockquote>\n<p>共享模块，一眼看上去好像 wasm 的说 |･ω･｀)</p>\n<p>使用 C++ 编写源码，编译成 <code>addon.node</code>  这样的二进制文件供 node 调用。</p>\n<p>似乎要先面熟一些东西：</p>\n<ul>\n<li>\n<p>V8：node 用来执行 js 的 C++ 库，萌新阶段就听说的牛逼玩意儿 QwQ</p>\n</li>\n<li>\n<p>libuv：用来实现 node 的 event loop, worker, asynchronous 的 C++ 库</p>\n<ul>\n<li>\n<blockquote>\n<p>Addon authors should avoid blocking the event loop with I/O or other time-intensive tasks by offloading work via libuv to non-blocking system operations, worker threads, or a custom use of libuv threads.</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>Internal Node.js libraries：node 自身提供一些 addon 可以使用的 C++ API，最重要比如 <code>node::ObjectWrap</code></p>\n</li>\n<li>\n<p>只有  <code>libuv, OpenSSL, V8, and zlib symbols</code>  被 node 重新暴露出来，其他似乎要手动链接 qwq</p>\n</li>\n</ul>\n<h2 id=\"编写hello-world\"><a class=\"markdownIt-Anchor\" href=\"#编写hello-world\">#</a> 编写 Hello World</h2>\n<p>先跟官网来粘一份代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// hello.cc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;node.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">namespace</span> demo</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>FunctionCallbackInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Isolate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Local<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>String<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Method</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Isolate <span class=\"token operator\">*</span>isolate <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    args<span class=\"token punctuation\">.</span><span class=\"token function\">GetReturnValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token operator\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                  isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                  <span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span>Local<span class=\"token operator\">&lt;</span>Object<span class=\"token operator\">></span> exports<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">NODE_SET_METHOD</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> Method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token function\">NODE_MODULE</span><span class=\"token punctuation\">(</span>NODE_GYP_MODULE_NAME<span class=\"token punctuation\">,</span> Initialize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// namespace demo</span></pre></td></tr></table></figure><p>所有 node addon 必须像这样暴露一个初始化函数：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span>Local<span class=\"token operator\">&lt;</span>Object<span class=\"token operator\">></span> exports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">NODE_MODULE</span><span class=\"token punctuation\">(</span>NODE_GYP_MODULE_NAME<span class=\"token punctuation\">,</span> Initialize<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 后面没分号</span></pre></td></tr></table></figure><p>The  <code>module_name</code>  must match the filename of the final binary (excluding the  <code>.node</code>  suffix).</p>\n<p>上面例子中，the initialization function is  <code>Initialize</code>  and the addon module name is  <code>addon</code> .（先比着抄就完事了）</p>\n<h2 id=\"构建\"><a class=\"markdownIt-Anchor\" href=\"#构建\">#</a> 构建</h2>\n<p>这里使用 node-gyp 来编译写好的 C++ 成一个二进制文件 <code>addon.node</code></p>\n<p>node-gyp 作为 npm 内置的一部分，被设计为正常情况下只有在 npm install 装一些 node addons 的时候才可以用内置的 node-gyp 来针对平台编译 addon，自己用的话需要手动安装 node-gyp，参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlLWd5cCNpbnN0YWxsYXRpb24=\"> github 仓库</span>。</p>\n<p>小插曲：不知道为啥遇到一堆网络问题，npm, yarn, tencent 都试了一遍，还是 cnpm 最顶（顺带安利一个叫 nrm 的工具，顺带半个晚上进去了 QAQ）</p>\n<p>在项目根目录新建一个叫  <code>binding.gyp</code>  的配置文件，供 node-gyp 来编译 addon</p>\n<p>binding.gyp：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"targets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"target_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"addon\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"sources\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello.cc\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 这里注意 cc 文件的路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后使用  <code>node-gyp configure</code>  会发现新增了一个  <code>build</code>  文件夹，这边 mac 平台里面有个 Makefile，然后再  <code>node-gyp build</code>  会发现新增了  <code>build/Release/addon.node</code> ，就编译完了</p>\n<h2 id=\"在node中使用addon\"><a class=\"markdownIt-Anchor\" href=\"#在node中使用addon\">#</a> 在 node 中使用 addon</h2>\n<p>直接在 node 中使用  <code>require</code>  即可引入刚刚编译的模块（像调用普通模块一样调用二进制文件，怎么这么像 wasm…）</p>\n<p>hello.js：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> addon <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./build/Release/addon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>addon<span class=\"token punctuation\">.</span><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// Prints: 'world'</span></pre></td></tr></table></figure><p>编译的二进制文件路径可能因为编译方式不同而不同，可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Rvb1RhbGxOYXRlL25vZGUtYmluZGluZ3M=\"> node-bindings</span> 来确定这个路径。</p>\n<pre><code class=\"language-Bash\">yarn add bindings\nimport bindings from 'bindings';\n\nconst addon = bindings('addon.node');\n\nconsole.log(addon.hello());\n</code></pre>\n<h2 id=\"传递参数\"><a class=\"markdownIt-Anchor\" href=\"#传递参数\">#</a> 传递参数</h2>\n<p>还是官网的例子：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2FkZG9uLmNj\">addon.cc</span>：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;node.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> demo</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Exception<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>FunctionCallbackInfo<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Isolate<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Local<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Object<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>String<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">using</span> v8<span class=\"token operator\">::</span>Value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token comment\">// This is the implementation of the \"add\" method</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token comment\">// Input arguments are passed using the</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\">// const FunctionCallbackInfo&lt;Value>&amp; args struct</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>args<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Isolate <span class=\"token operator\">*</span>isolate <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// Check the number of arguments passed.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">Length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token comment\">// Throw an Error that is passed back to JavaScript</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      isolate<span class=\"token operator\">-></span><span class=\"token function\">ThrowException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token operator\">::</span><span class=\"token function\">TypeError</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token class-name\">String</span><span class=\"token operator\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                              <span class=\"token string\">\"Wrong number of arguments\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>              <span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// Check the argument types</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">IsNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">IsNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      isolate<span class=\"token operator\">-></span><span class=\"token function\">ThrowException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span><span class=\"token operator\">::</span><span class=\"token function\">TypeError</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token class-name\">String</span><span class=\"token operator\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                              <span class=\"token string\">\"Wrong arguments\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>              <span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// Perform the operation</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">double</span> value <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>As<span class=\"token operator\">&lt;</span>Number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>As<span class=\"token operator\">&lt;</span>Number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    Local<span class=\"token operator\">&lt;</span>Number<span class=\"token operator\">></span> num <span class=\"token operator\">=</span> <span class=\"token class-name\">Number</span><span class=\"token operator\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// Set the return value (using the passed in</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// FunctionCallbackInfo&lt;Value>&amp;)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    args<span class=\"token punctuation\">.</span><span class=\"token function\">GetReturnValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span>Local<span class=\"token operator\">&lt;</span>Object<span class=\"token operator\">></span> exports<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token function\">NODE_SET_METHOD</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span> Add<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token function\">NODE_MODULE</span><span class=\"token punctuation\">(</span>NODE_GYP_MODULE_NAME<span class=\"token punctuation\">,</span> Init<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// namespace demo</span></pre></td></tr></table></figure><h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>这个看上去像 wasm 的东西大概优点就跟 wasm 差不多叭，能在 node 里跑 C++ 的话对性能提升不用说，还有些 js 实现不了的奇奇怪怪的操作（比如获取某个变量在内存中的表示形式 qwq）</p>\n<p>顺带隔壁 deno 什么时候出个 Rust addons 呀</p>\n",
            "tags": [
                "C++",
                "node"
            ]
        },
        {
            "id": "https://eruihniyhbkbnf.github.io/blog/2022/08/23/%E7%BE%8E%E5%8C%96github%E9%A6%96%E9%A1%B5%E5%98%A4%EF%BD%9E/",
            "url": "https://eruihniyhbkbnf.github.io/blog/2022/08/23/%E7%BE%8E%E5%8C%96github%E9%A6%96%E9%A1%B5%E5%98%A4%EF%BD%9E/",
            "title": "美化github首页嘤～",
            "date_published": "2022-08-23T09:45:42.000Z",
            "content_html": "<p>逛 github 多了就经常看到好多人首页都特别好看，就咱只有几个 pinned 的仓库在那里，打算收拾一下主页 qwq</p>\n<p>Github 上有个叫 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FiaGlzaGVrbmFpaWR1L2F3ZXNvbWUtZ2l0aHViLXByb2ZpbGUtcmVhZG1l\">Awsome Github Profile Readme</span> 的仓库，展示了各种佬的 profile 页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96emV0YW8uZ2l0aHViLmlvL2F3ZXNvbWUtZ2l0aHViLXByb2ZpbGUv\">在线预览</span></p>\n<p>比如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RobXNnYnJ0\">这个佬</span>这样子：</p>\n<img data-src=\"https://git.poker/ERUIHNIYHBKBNF/picapica/blob/main/misc/QQ20220823-175244.3kxt15f52720.webp?raw=true\" width=\"750px\">\n<p>看上去好厉害… 咱也整一个 qwq</p>\n<h2 id=\"建立个人profile页面\"><a class=\"markdownIt-Anchor\" href=\"#建立个人profile页面\">#</a> 建立个人 profile 页面</h2>\n<p>新建一个仓库跟 github 用户名同名，会看到这样的系统提示：</p>\n<blockquote>\n<p><strong>ERUIHNIYHBKBNF/ERUIHNIYHBKBNF</strong> is a special repository.</p>\n<p>Its  <code>README.md</code>  will appear on your public profile.</p>\n</blockquote>\n<p>这个仓库的 README 会被展示到个人主页上，这样就可以愉快地写一个漂亮的个人页面啦 QwQ</p>\n<h2 id=\"一些好看的小组件\"><a class=\"markdownIt-Anchor\" href=\"#一些好看的小组件\">#</a> 一些好看的小组件</h2>\n<h3 id=\"github-stats\"><a class=\"markdownIt-Anchor\" href=\"#github-stats\">#</a> github stats</h3>\n<p>展示个人的 github 状态评级什么的，github 官方提供。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FudXJhZ2hhenJhL2dpdGh1Yi1yZWFkbWUtc3RhdHM=\">仓库地址</span></p>\n<p>当然方便点直接把这个链接改成自己的 id 就好了（其中包含主题和图标参数可以去掉）：</p>\n<pre><code class=\"language-text\">https://github-readme-stats.vercel.app/api?username=ERUIHNIYHBKBNF&amp;theme=dracula&amp;show_icons=true\n</code></pre>\n<p><img data-src=\"https://github-readme-stats.vercel.app/api?username=ERUIHNIYHBKBNF&amp;theme=dracula&amp;show_icons=true\" alt=\"\"></p>\n<h3 id=\"shieldsio\"><a class=\"markdownIt-Anchor\" href=\"#shieldsio\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL1NoaWVsZHMuaW8=\">Shields.io</span> 小图标</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGllbGRzLmlvLw==\">网站地址</span></p>\n<p>用来创建小图标比如这样：<img alt=\"TypeScript\" data-src=\"https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&logo=typescript&logoColor=white\" /></p>\n<p>当然也可以直接通过修改 url 来定制图标：</p>\n<pre><code class=\"language-text\">https://img.shields.io/badge/-右侧文字-背景颜色?style=卡片样式&amp;logo=左侧图标名称&amp;logoColor=左侧图标颜色\n比如上面的typescript卡片就是这个样子：\nhttps://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;logo=typescript&amp;logoColor=white\nmarkdown里直接这样写：\n&lt;img alt=&quot;TypeScript&quot; src=&quot;https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;logo=typescript&amp;logoColor=white&quot; /&gt;\n</code></pre>\n<p>其中左侧图标可以在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaW1wbGVpY29ucy5vcmcv\">这里</span>找到。</p>\n<p>用这些写出来的主页看上去大概是这样子：</p>\n<p><img data-src=\"https://git.poker/ERUIHNIYHBKBNF/picapica/blob/main/common/QQ20220825-102943@2x.2i2qbwmetvc0.webp?raw=true\" alt=\"\"></p>\n<h2 id=\"通过node更新readme\"><a class=\"markdownIt-Anchor\" href=\"#通过node更新readme\">#</a> 通过 node 更新 readme</h2>\n<p>通过 node 来更新我们的 README 文件，这样之后可以通过 ci 每隔一段时间爬取个人动态自动更新。上面提到的佬使用了 mustache 模版，这边简单些直接弄字符串替换好了 qwq</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1SRUFETUUtOW03aWdsNzNkdTZrNTA3YmUwaG5pbS50ZW1wbGF0ZS5tZA==\">我们先新建一个 README.template.md</span>，里面存储一些固定信息，并用注释（或者什么其他标识）来标出要动态替换的位置：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL1JFQURNRS50ZW1wbGF0ZS5tZA==\">README.template.md</span>:</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">###</span> Hi there 👋</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>blabla写一堆其他内容</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token hr punctuation\">--------</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">&lt;!-- footer --></span></pre></td></tr></table></figure><p>项目代码也很简单：</p>\n<p>核心部分，index.ts:</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> readFile<span class=\"token punctuation\">,</span> writeFile <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs/promises'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> getFooter <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./footer'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token constant\">TEMPLATE_PATH</span> <span class=\"token operator\">=</span> <span class=\"token string\">'README.template.md'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> readmeContent<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">[</span>ket<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Function</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  footer<span class=\"token operator\">:</span> getFooter<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">genernateReadMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getComment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>comment<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> <span class=\"token keyword\">typeof</span> readmeContent<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;!-- </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>comment<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"> --></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">let</span> template <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TEMPLATE_PATH</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> encoding<span class=\"token operator\">:</span> <span class=\"token string\">'utf-8'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> key <span class=\"token keyword\">in</span> readmeContent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">const</span> comment <span class=\"token operator\">=</span> <span class=\"token function\">getComment</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">const</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> readmeContent<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    template <span class=\"token operator\">=</span> template<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">await</span> <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'README.md'</span><span class=\"token punctuation\">,</span> template<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> encoding<span class=\"token operator\">:</span> <span class=\"token string\">'utf-8'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">genernateReadMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>用于生成 footer 的部分，footer.ts:</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> timeZone <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getFooter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;p align=\"center\">此文件 &lt;i>README&lt;/i> &lt;b>间隔 3 小时&lt;/b>自动刷新生成！</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&lt;/br></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>最近一次刷新于：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    timeStyle<span class=\"token operator\">:</span> <span class=\"token string\">\"medium\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    dateStyle<span class=\"token operator\">:</span> <span class=\"token string\">\"short\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    timeZone<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>&lt;/p></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当然我们可以通过在 package.json 中添加 script 来一键生成 README：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"gen\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc &amp;&amp; node dist/index.js\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h2 id=\"通过github-actions定时自动更新\"><a class=\"markdownIt-Anchor\" href=\"#通过github-actions定时自动更新\">#</a> 通过 github actions 定时自动更新</h2>\n<p>创建文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> .github <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> .github <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mkdir</span> workflows <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> workflows <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> main.yaml</pre></td></tr></table></figure><p>下面的指令根据实际情况修改，main.yaml:</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> README build</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> master</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0 */3 * * *'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout current repository to master branch.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Nodejs.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'16.x'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache dependencies and build outputs to improve workflow execution time.</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼0<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">-</span>js<span class=\"token punctuation\">-</span>$&lt;<span class=\"token tag\">!--swig</span>￼1<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      - name: Install dependencies</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        run: npm install -g yarn &amp;&amp; yarn</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      - name: Generate README file</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        run: yarn gen</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      - name: Commit and Push new README.md to the repository</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        uses: mikeal/publish-to-github-action@master</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        env:</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          GITHUB_TOKEN: $</span></pre></td></tr></table></figure><p>这个  <code>GITHUB_</code>  开头的 token 似乎是自带的变量 qwq</p>\n<!-- ## 使用Puppeteer获取最近动态 -->\n",
            "tags": [
                "杂项",
                "node",
                "ci/cd"
            ]
        },
        {
            "id": "https://eruihniyhbkbnf.github.io/blog/2022/05/12/typeorm-No-metadata-for-User-was-found-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "url": "https://eruihniyhbkbnf.github.io/blog/2022/05/12/typeorm-No-metadata-for-User-was-found-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "title": "文件路径问题 typeorm 'No metadata for User was found' 解决",
            "date_published": "2022-05-12T06:47:03.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTE1NjIxNjIvbm8tbWV0YWRhdGEtZm9yLXVzZXItd2FzLWZvdW5kLXVzaW5nLXR5cGVvcm0=\">https://stackoverflow.com/questions/51562162/no-metadata-for-user-was-found-using-typeorm</span></p>\n<h2 id=\"问题描述\"><a class=\"markdownIt-Anchor\" href=\"#问题描述\">#</a> 问题描述</h2>\n<p>问题来自一个 typeorm 的 dataSource 配置：</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  host<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_HOST</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  port<span class=\"token operator\">:</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MYSQL_PROT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  username<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_USER</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  password<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_PWD</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  database<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_DB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  synchronize<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  entities<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src/entity/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>开发环境正常，生产环境报错：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>******<span class=\"token punctuation\">\\</span>src<span class=\"token punctuation\">\\</span>entity<span class=\"token punctuation\">\\</span>user.ts:1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">import</span> <span class=\"token punctuation\">&#123;</span> Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn, DeleteDateColumn <span class=\"token punctuation\">&#125;</span> from <span class=\"token string\">'typeorm'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>^^^^^^</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>SyntaxError: Cannot use <span class=\"token function\">import</span> statement outside a module</pre></td></tr></table></figure><p>蜜汁调用了 ts 文件。</p>\n<h2 id=\"解决\"><a class=\"markdownIt-Anchor\" href=\"#解决\">#</a> 解决</h2>\n<p>entities 路径指向了未被编译的 ts 文件，顺带如果路径写错的话就会出现 “No metadata for User was found” 的报错。</p>\n<p><code>__dirname</code>  指向当前模块的路径。</p>\n<p>改一下就好了：</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> dataSource <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  host<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_HOST</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  port<span class=\"token operator\">:</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MYSQL_PROT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  username<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_USER</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  password<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_PWD</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  database<span class=\"token operator\">:</span> <span class=\"token constant\">MYSQL_DB</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  synchronize<span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  entities<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/../entity/**/*.js\"</span><span class=\"token punctuation\">,</span> __dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/../entity/**/*.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>才发现自己原来根本不理解这个路径的意思 qwq</p>\n",
            "tags": [
                "前端",
                "node",
                "typeorm"
            ]
        }
    ]
}